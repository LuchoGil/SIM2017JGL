
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.data.category.DefaultCategoryDataset;

public class Ventana extends javax.swing.JFrame {

    private Gestor g;
    private VentanaPrueba prueba;
    DefaultCategoryDataset datos;
    DefaultCategoryDataset datos2;
    JFreeChart grafico;
    JFreeChart grafico2;
    ArrayList<Float> lisUniforme, lisExponencial, lisNormal;
    ArrayList<Integer> lisPoisson;

    public Ventana() {
        initComponents();
        g = new Gestor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlUniforme = new javax.swing.JList<>();
        btnGenerar = new javax.swing.JButton();
        btnGraficar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        txtB = new javax.swing.JTextField();
        txtNU = new javax.swing.JTextField();
        cmbInteU = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        btn_probarUni = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlExponencial = new javax.swing.JList();
        btnGenerar1 = new javax.swing.JButton();
        btnGraficar1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtLamda = new javax.swing.JTextField();
        txtNE = new javax.swing.JTextField();
        cmbInteE = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        btn_probarExpo = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlPoisson = new javax.swing.JList();
        btnGenerar2 = new javax.swing.JButton();
        btnGraficar2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtLamda1 = new javax.swing.JTextField();
        txtNP = new javax.swing.JTextField();
        cmbInteP = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        btn_probarPoi = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlNormal = new javax.swing.JList();
        btnGenerar3 = new javax.swing.JButton();
        btnGraficar3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtDesv = new javax.swing.JTextField();
        txtMedia = new javax.swing.JTextField();
        cmbInteN = new javax.swing.JComboBox();
        txtNN = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btn_probarNormal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(600, 400));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Valor A:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel2.setText("Valor B:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel3.setText("Muestra:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        jScrollPane1.setViewportView(jlUniforme);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 220, 260));

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        btnGraficar.setText("Graficar");
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGraficar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, -1));

        jLabel4.setText("Intervalos");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));
        jPanel1.add(txtA, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 60, -1));
        jPanel1.add(txtB, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 60, -1));
        jPanel1.add(txtNU, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 60, -1));

        cmbInteU.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "20" }));
        cmbInteU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInteUActionPerformed(evt);
            }
        });
        jPanel1.add(cmbInteU, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel15.setText("DISTRIBUCIÓN UNIFORME");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 170, -1));

        btn_probarUni.setText("Probar Generador");
        btn_probarUni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_probarUniActionPerformed(evt);
            }
        });
        jPanel1.add(btn_probarUni, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, -1, -1));

        jTabbedPane1.addTab("Distribución Uniforme", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Lambda:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel7.setText("Muestra: ");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jScrollPane2.setViewportView(jlExponencial);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 220, 260));

        btnGenerar1.setText("Generar");
        btnGenerar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerar1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnGenerar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, -1, -1));

        btnGraficar1.setText("Graficar");
        btnGraficar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficar1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnGraficar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        jLabel8.setText("Intervalos");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));
        jPanel2.add(txtLamda, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 60, -1));
        jPanel2.add(txtNE, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 60, -1));

        cmbInteE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "20" }));
        cmbInteE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInteEActionPerformed(evt);
            }
        });
        jPanel2.add(cmbInteE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel16.setText("DISTRIBUCIÓN EXPONENCIAL");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 200, -1));

        btn_probarExpo.setText("Probar Generador");
        btn_probarExpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_probarExpoActionPerformed(evt);
            }
        });
        jPanel2.add(btn_probarExpo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, -1, -1));

        jTabbedPane1.addTab("Distribución Exponencial", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Lambda:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel9.setText("Muestra: ");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jScrollPane3.setViewportView(jlPoisson);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 220, 260));

        btnGenerar2.setText("Generar");
        btnGenerar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerar2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnGenerar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, -1, -1));

        btnGraficar2.setText("Graficar");
        btnGraficar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficar2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnGraficar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        jLabel10.setText("Intervalos");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));
        jPanel3.add(txtLamda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 60, -1));
        jPanel3.add(txtNP, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 60, -1));

        cmbInteP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "20" }));
        cmbInteP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIntePActionPerformed(evt);
            }
        });
        jPanel3.add(cmbInteP, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel17.setText("DISTRIBUCIÓN DE POISSON");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 210, -1));

        btn_probarPoi.setText("Probar Generador");
        btn_probarPoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_probarPoiActionPerformed(evt);
            }
        });
        jPanel3.add(btn_probarPoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, -1, -1));

        jTabbedPane1.addTab("Distribución de Poisson", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Desviación:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel12.setText("Media: ");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jScrollPane4.setViewportView(jlNormal);

        jPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 220, 260));

        btnGenerar3.setText("Generar");
        btnGenerar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerar3ActionPerformed(evt);
            }
        });
        jPanel4.add(btnGenerar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        btnGraficar3.setText("Graficar");
        btnGraficar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficar3ActionPerformed(evt);
            }
        });
        jPanel4.add(btnGraficar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        jLabel13.setText("Intervalos");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));
        jPanel4.add(txtDesv, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 60, -1));
        jPanel4.add(txtMedia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 60, -1));

        cmbInteN.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "20" }));
        cmbInteN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInteNActionPerformed(evt);
            }
        });
        jPanel4.add(cmbInteN, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));
        jPanel4.add(txtNN, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 60, -1));

        jLabel14.setText("Muestra: ");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("DISTRIBUCIÓN NORMAL");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 170, -1));

        btn_probarNormal.setText("Probar Generador");
        btn_probarNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_probarNormalActionPerformed(evt);
            }
        });
        jPanel4.add(btn_probarNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, -1, -1));

        jTabbedPane1.addTab("Distribución Normal", jPanel4);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbInteUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInteUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbInteUActionPerformed

    private void cmbInteEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInteEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbInteEActionPerformed

    private void cmbIntePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIntePActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbIntePActionPerformed

    private void cmbInteNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInteNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbInteNActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        float a = Float.parseFloat(txtA.getText());
        float b = Float.parseFloat(txtB.getText());
        int muestra = Integer.parseInt(txtNU.getText());
        lisUniforme = g.generarUniforme(muestra, a, b);
        Vector v = new Vector();
        v.addAll(lisUniforme);
        jlUniforme.setListData(v);
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnGenerar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerar1ActionPerformed
        float lamda = Float.parseFloat(txtLamda.getText());
        int muestra = Integer.parseInt(txtNE.getText());
        lisExponencial = g.generarExponencial(muestra, lamda);
        Vector v = new Vector();
        v.addAll(lisExponencial);
        jlExponencial.setListData(v);
    }//GEN-LAST:event_btnGenerar1ActionPerformed

    private void btnGenerar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerar2ActionPerformed
        float lamda1 = Float.parseFloat(txtLamda1.getText());
        int muestra = Integer.parseInt(txtNP.getText());
        lisPoisson = g.generarPoisson(muestra, lamda1);
        Vector v = new Vector();
        v.addAll(lisPoisson);
        jlPoisson.setListData(v);
    }//GEN-LAST:event_btnGenerar2ActionPerformed

    private void btnGenerar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerar3ActionPerformed
        float desv = Float.parseFloat(txtDesv.getText());
        float media = Float.parseFloat(txtMedia.getText());
        int muestra = Integer.parseInt(txtNN.getText());
        lisNormal = g.generarNormal(muestra, desv, media);
        Vector v = new Vector();
        v.addAll(lisNormal);
        jlNormal.setListData(v);
    }//GEN-LAST:event_btnGenerar3ActionPerformed

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed
        datos = new DefaultCategoryDataset();
        int intervalos;
        switch (cmbInteU.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloU(Float.parseFloat(txtA.getText()), Float.parseFloat(txtB.getText()), intervalos);
        int vector[] = g.frecuenciaIntervaloU(Float.parseFloat(txtA.getText()), rango, intervalos, lisUniforme);
        float desde = Float.parseFloat(txtA.getText()); //arranca en a
        float hasta = desde + rango;
        for (int i = 0; i < vector.length; i++) {
            datos.addValue(vector[i], "Frecuencia", desde + "-" + hasta);
            desde = hasta;
            hasta = hasta + rango;

        }
        grafico = ChartFactory.createBarChart("Gráfico de Frecuencias Obtenidas", "Rango", "Frecuencia Obtenida", datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafico);
        CategoryPlot plot = grafico.getCategoryPlot();
        JFrame ventana = new JFrame("Gráfico de Frecuencia");
        ventana.add(panel, BorderLayout.NORTH);
        ventana.pack();
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnGraficarActionPerformed

    private void btnGraficar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficar1ActionPerformed
        datos = new DefaultCategoryDataset();
        int intervalos;
        switch (cmbInteE.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloE(intervalos, lisExponencial);
        int vector[] = g.frecuenciaIntervaloE(rango, intervalos, lisExponencial);
        float desde = g.minContinuo(lisExponencial);
        float hasta = desde + rango;
        for (int i = 0; i < vector.length; i++) {
            datos.addValue(vector[i], "Frecuencia", desde + "-" + hasta);
            desde = hasta;
            hasta = hasta + rango;

        }
        grafico = ChartFactory.createBarChart("Gráfico de Frecuencias Obtenidas", "Rango", "Frecuencia Obtenida", datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafico);
        CategoryPlot plot = grafico.getCategoryPlot();
        JFrame ventana = new JFrame("Gráfico de Frecuencia");
        ventana.add(panel, BorderLayout.NORTH);
        ventana.pack();
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnGraficar1ActionPerformed

    private void btnGraficar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficar2ActionPerformed
        datos = new DefaultCategoryDataset();
        int intervalos;
        switch (cmbInteP.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        int rango = g.numIntervaloP(intervalos, lisPoisson);
        int vector[] = g.frecuenciaIntervaloP(rango, intervalos, lisPoisson);
        int min = g.numMin(rango, lisPoisson);
        int desde = min;
        int hasta = min + rango;
        for (int i = 0; i < vector.length; i++) {
            datos.addValue(vector[i], "Frecuencia", desde + "-" + hasta);
            desde = desde + rango;
            hasta = hasta + rango;

        }
        grafico = ChartFactory.createBarChart("Gráfico de Frecuencias Obtenidas", "Rango", "Frecuencia Obtenida", datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafico);
        CategoryPlot plot = grafico.getCategoryPlot();
        JFrame ventana = new JFrame("Gráfico de Frecuencia");
        ventana.add(panel, BorderLayout.NORTH);
        ventana.pack();
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnGraficar2ActionPerformed

    private void btnGraficar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficar3ActionPerformed

        datos = new DefaultCategoryDataset();
        int intervalos;

        switch (cmbInteN.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloE(intervalos, lisNormal);
        int vector[] = g.frecuenciaIntervaloN(g.minContinuo(lisNormal), rango, intervalos, lisNormal);
        float desde = g.minContinuo(lisNormal); //arranca en min
        float hasta = desde + rango;
        for (int i = 0; i < vector.length; i++) {
            datos.addValue(vector[i], "Frecuencia", desde + "-" + hasta);
            desde = hasta;
            hasta = hasta + rango;

        }
        grafico = ChartFactory.createBarChart("Gráfico de Frecuencias Obtenidas", "Rango", "Frecuencia Obtenida", datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafico);
        CategoryPlot plot = grafico.getCategoryPlot();
        JFrame ventana = new JFrame("Gráfico de Frecuencia");
        ventana.add(panel, BorderLayout.NORTH);
        ventana.pack();
        ventana.setVisible(true);
        ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnGraficar3ActionPerformed

    private void btn_probarUniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_probarUniActionPerformed
        prueba = new VentanaPrueba();

        int intervalos;

        switch (cmbInteU.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloU(Float.parseFloat(txtA.getText()), Float.parseFloat(txtB.getText()), intervalos);
        prueba.setGestor(g);
        prueba.setOrden(1);
        prueba.setCantNum(Integer.parseInt(txtNU.getText()));
        prueba.setIntervalos(intervalos);
        prueba.setVector(g.frecuenciaIntervaloU(Float.parseFloat(txtA.getText()), rango, intervalos, lisUniforme));
        prueba.setMatriz();
        prueba.cargarTabla();
        prueba.setVisible(true);

    }//GEN-LAST:event_btn_probarUniActionPerformed

    private void btn_probarExpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_probarExpoActionPerformed
        prueba = new VentanaPrueba();

        int intervalos;

        switch (cmbInteE.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloE(intervalos, lisExponencial);
        prueba.setGestor(g);
        prueba.setOrden(2);
        prueba.setRango(rango);
        prueba.setCantNum(Integer.parseInt(txtNE.getText()));
        prueba.setIntervalos(intervalos);
        prueba.setVector(g.frecuenciaIntervaloE(rango, intervalos, lisExponencial));
        prueba.setLambda(Float.parseFloat(txtLamda.getText()));
        prueba.setLista(lisExponencial);
        prueba.setMatriz();
        prueba.cargarTabla();
        prueba.setVisible(true);
    }//GEN-LAST:event_btn_probarExpoActionPerformed

    private void btn_probarPoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_probarPoiActionPerformed
        prueba = new VentanaPrueba();
        int intervalos;

        switch (cmbInteP.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        int rango = g.numIntervaloP(intervalos, lisPoisson);
        prueba.setGestor(g);
        prueba.setOrden(4);
        prueba.setRango(rango);
        prueba.setCantNum(Integer.parseInt(txtNP.getText()));
        prueba.setIntervalos(intervalos);
        prueba.setVector(g.frecuenciaIntervaloP(rango, intervalos, lisPoisson));
        prueba.setLamdaP(Integer.parseInt(txtLamda1.getText()));
        prueba.setListaP(lisPoisson);
        prueba.setMatrizP();
        prueba.cargarTablaChi();
        prueba.setVisible(true);
    }//GEN-LAST:event_btn_probarPoiActionPerformed

    private void btn_probarNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_probarNormalActionPerformed
        // TODO add your handling code here:
        prueba = new VentanaPrueba();

        int intervalos;

        switch (cmbInteN.getSelectedIndex()) {
            case 1:
                intervalos = 10;
                break;
            case 2:
                intervalos = 20;
                break;
            default:
                intervalos = 5;
        }

        float rango = g.numIntervaloE(intervalos, lisNormal);
        prueba.setGestor(g);
        prueba.setOrden(3);
        prueba.setRango(rango);
        prueba.setCantNum(Integer.parseInt(txtNN.getText()));
        prueba.setIntervalos(intervalos);
        prueba.setVector(g.frecuenciaIntervaloE(rango, intervalos, lisNormal));
        prueba.setMedia(Float.parseFloat(txtMedia.getText()));
        prueba.setDesviacion(Float.parseFloat(txtDesv.getText()));
        prueba.setLista(lisNormal);
        prueba.setMatriz();
        prueba.cargarTabla();
        prueba.setVisible(true);
    }//GEN-LAST:event_btn_probarNormalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnGenerar1;
    private javax.swing.JButton btnGenerar2;
    private javax.swing.JButton btnGenerar3;
    private javax.swing.JButton btnGraficar;
    private javax.swing.JButton btnGraficar1;
    private javax.swing.JButton btnGraficar2;
    private javax.swing.JButton btnGraficar3;
    private javax.swing.JButton btn_probarExpo;
    private javax.swing.JButton btn_probarNormal;
    private javax.swing.JButton btn_probarPoi;
    private javax.swing.JButton btn_probarUni;
    private javax.swing.JComboBox cmbInteE;
    private javax.swing.JComboBox cmbInteN;
    private javax.swing.JComboBox cmbInteP;
    private javax.swing.JComboBox cmbInteU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList jlExponencial;
    private javax.swing.JList jlNormal;
    private javax.swing.JList jlPoisson;
    private javax.swing.JList<Float> jlUniforme;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtDesv;
    private javax.swing.JTextField txtLamda;
    private javax.swing.JTextField txtLamda1;
    private javax.swing.JTextField txtMedia;
    private javax.swing.JTextField txtNE;
    private javax.swing.JTextField txtNN;
    private javax.swing.JTextField txtNP;
    private javax.swing.JTextField txtNU;
    // End of variables declaration//GEN-END:variables
}
